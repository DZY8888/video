<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hniu.mapper.AnnouncementMapper" >
  <resultMap id="BaseResultMap" type="com.hniu.entity.Announcement" >
    <id column="announcement_id" property="announcementId" jdbcType="INTEGER" />
    <result column="tution_id" property="tutionId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="pubdate" property="pubdate" jdbcType="TIMESTAMP" />
    <result column="issuer" property="issuer" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hniu.entity.Announcement" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    announcement_id, tution_id, title, pubdate, issuer
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.hniu.entity.AnnouncementExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_announcement
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hniu.entity.AnnouncementExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_announcement
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="listAnnouncement" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from  tbl_announcement
  </select>

  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tbl_announcement
    where announcement_id = #{announcementId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tbl_announcement
    where announcement_id = #{announcementId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hniu.entity.AnnouncementExample" >
    delete from tbl_announcement
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hniu.entity.Announcement" >
    insert into tbl_announcement (announcement_id, tution_id, title, 
      pubdate, issuer, content
      )
    values (#{announcementId,jdbcType=INTEGER}, #{tutionId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{pubdate,jdbcType=TIMESTAMP}, #{issuer,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hniu.entity.Announcement" >
    insert into tbl_announcement
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="announcementId != null" >
        announcement_id,
      </if>
      <if test="tutionId != null" >
        tution_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="pubdate != null" >
        pubdate,
      </if>
      <if test="issuer != null" >
        issuer,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="announcementId != null" >
        #{announcementId,jdbcType=INTEGER},
      </if>
      <if test="tutionId != null" >
        #{tutionId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="pubdate != null" >
        #{pubdate,jdbcType=TIMESTAMP},
      </if>
      <if test="issuer != null" >
        #{issuer,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hniu.entity.AnnouncementExample" resultType="java.lang.Integer" >
    select count(*) from tbl_announcement
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tbl_announcement
    <set >
      <if test="record.announcementId != null" >
        announcement_id = #{record.announcementId,jdbcType=INTEGER},
      </if>
      <if test="record.tutionId != null" >
        tution_id = #{record.tutionId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.pubdate != null" >
        pubdate = #{record.pubdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.issuer != null" >
        issuer = #{record.issuer,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update tbl_announcement
    set announcement_id = #{record.announcementId,jdbcType=INTEGER},
      tution_id = #{record.tutionId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      pubdate = #{record.pubdate,jdbcType=TIMESTAMP},
      issuer = #{record.issuer,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tbl_announcement
    set announcement_id = #{record.announcementId,jdbcType=INTEGER},
      tution_id = #{record.tutionId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      pubdate = #{record.pubdate,jdbcType=TIMESTAMP},
      issuer = #{record.issuer,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hniu.entity.Announcement" >
    update tbl_announcement
    <set >
      <if test="tutionId != null" >
        tution_id = #{tutionId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="pubdate != null" >
        pubdate = #{pubdate,jdbcType=TIMESTAMP},
      </if>
      <if test="issuer != null" >
        issuer = #{issuer,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where announcement_id = #{announcementId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hniu.entity.Announcement" >
    update tbl_announcement
    set tution_id = #{tutionId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      pubdate = #{pubdate,jdbcType=TIMESTAMP},
      issuer = #{issuer,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where announcement_id = #{announcementId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hniu.entity.Announcement" >
    update tbl_announcement
    set tution_id = #{tutionId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      pubdate = #{pubdate,jdbcType=TIMESTAMP},
      issuer = #{issuer,jdbcType=VARCHAR}
    where announcement_id = #{announcementId,jdbcType=INTEGER}
  </update>
</mapper>