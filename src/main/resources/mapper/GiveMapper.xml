<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hniu.mapper.GiveMapper" >
  <resultMap id="BaseResultMap" type="com.hniu.entity.Give" >
    <id column="give_id" property="giveId" jdbcType="INTEGER" />
    <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
    <result column="curriculum_id" property="curriculumId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    give_id, teacher_id, curriculum_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hniu.entity.GiveExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_give
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tbl_give
    where give_id = #{giveId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tbl_give
    where give_id = #{giveId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hniu.entity.GiveExample" >
    delete from tbl_give
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hniu.entity.Give" >
    insert into tbl_give (give_id, teacher_id, curriculum_id
      )
    values (#{giveId,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER}, #{curriculumId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hniu.entity.Give" >
    insert into tbl_give
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="giveId != null" >
        give_id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="curriculumId != null" >
        curriculum_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="giveId != null" >
        #{giveId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="curriculumId != null" >
        #{curriculumId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hniu.entity.GiveExample" resultType="java.lang.Integer" >
    select count(*) from tbl_give
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tbl_give
    <set >
      <if test="record.giveId != null" >
        give_id = #{record.giveId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null" >
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.curriculumId != null" >
        curriculum_id = #{record.curriculumId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tbl_give
    set give_id = #{record.giveId,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      curriculum_id = #{record.curriculumId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hniu.entity.Give" >
    update tbl_give
    <set >
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="curriculumId != null" >
        curriculum_id = #{curriculumId,jdbcType=INTEGER},
      </if>
    </set>
    where give_id = #{giveId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hniu.entity.Give" >
    update tbl_give
    set teacher_id = #{teacherId,jdbcType=INTEGER},
      curriculum_id = #{curriculumId,jdbcType=INTEGER}
    where give_id = #{giveId,jdbcType=INTEGER}
  </update>

  <resultMap id="giveAndTeacherMap" type="com.hniu.dto.GiveDto" extends="BaseResultMap">
  <collection property="teacher" ofType="com.hniu.entity.Teacher">
    <id column="teacher_id" property="teacherId" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="intro" property="intro" jdbcType="VARCHAR" />
    <result column="picture" property="picture" jdbcType="VARCHAR" />
  </collection>
</resultMap>
  <resultMap id="giveAndCurriculum" type="com.hniu.dto.GiveDto" extends="BaseResultMap">
    <collection property="curriculum" ofType="com.hniu.entity.Curriculum">
      <id column="curriculum_id" property="curriculumId" jdbcType="INTEGER" />
      <result column="university_id" property="universityId" jdbcType="INTEGER" />
      <result column="ct_id" property="ctId" jdbcType="INTEGER" />
      <result column="name" property="name" jdbcType="VARCHAR" />
      <result column="message" property="message" jdbcType="VARCHAR" />
      <result column="propaedeutics" property="propaedeutics" jdbcType="VARCHAR" />
      <result column="meferences" property="meferences" jdbcType="VARCHAR" />
      <result column="require" property="require" jdbcType="VARCHAR" />
      <result column="picture" property="picture" jdbcType="VARCHAR" />
      <result column="time" property="time" jdbcType="INTEGER" />
      <result column="score" property="score" jdbcType="DOUBLE" />
      <result column="video" property="video" jdbcType="VARCHAR" />
      <result column="is_Mainpic" property="isMainpic" jdbcType="BIT" />
      <result column="main_teacher" property="mainTeacher" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  <resultMap id="allGiveMap" type="com.hniu.entity.vo.GiveVo" extends="BaseResultMap">
      <result column="teacher_name" property="teacher_name" jdbcType="VARCHAR" />
      <result column="curriculum_name" property="curriculum_name" jdbcType="VARCHAR" />
  </resultMap>
  <select id="giveAndTeacher" parameterType="java.lang.Integer" resultMap="giveAndTeacherMap">
        select *
        FROM tbl_give a LEFT JOIN tbl_teacher b
        ON a.teacher_id = b.teacher_id
        WHERE a.curriculum_id = #{curriculum_id,jdbcType=INTEGER}
  </select>
  <select id="giveAndCurriculum" parameterType="java.lang.Integer" resultMap="giveAndCurriculum">
    SELECT *
    FROM tbl_give a LEFT JOIN tbl_curriculum b
    ON a.curriculum_id = b.curriculum_id
    where a.teacher_id = #{teacher_id,jdbcType=INTEGER}
  </select>
  <select id="selectGiveAll" resultMap="allGiveMap">
    SELECT a.`name` as teacher_name,b.*,c.`name` as curriculum_name
    FROM tbl_teacher a LEFT JOIN tbl_give b
    ON a.teacher_id = b.teacher_id
    LEFT JOIN tbl_curriculum c
    ON b.curriculum_id = c.curriculum_id
  </select>
  <select id="count" resultType="java.lang.Integer">
    SELECT COUNT(give_id)
    FROM tbl_give
  </select>
</mapper>