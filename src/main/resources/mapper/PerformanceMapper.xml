<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hniu.mapper.PerformanceMapper" >
  <resultMap id="BaseResultMap" type="com.hniu.entity.Performance" >
    <id column="performance_id" property="performanceId" jdbcType="INTEGER" />
    <result column="performance" property="performance" jdbcType="DOUBLE" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="task_id" property="taskId" jdbcType="INTEGER" />
    <result column="user_answer" property="userAnswer" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    performance_id, performance, user_id, task_id, user_answer
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hniu.entity.PerformanceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_performance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tbl_performance
    where performance_id = #{performanceId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tbl_performance
    where performance_id = #{performanceId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hniu.entity.PerformanceExample" >
    delete from tbl_performance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hniu.entity.Performance" >
    insert into tbl_performance (performance_id, performance, user_id, 
      task_id, user_answer)
    values (#{performanceId,jdbcType=INTEGER}, #{performance,jdbcType=DOUBLE}, #{userId,jdbcType=INTEGER}, 
      #{taskId,jdbcType=INTEGER}, #{userAnswer,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hniu.entity.Performance" >
    insert into tbl_performance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="performanceId != null" >
        performance_id,
      </if>
      <if test="performance != null" >
        performance,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="userAnswer != null" >
        user_answer,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="performanceId != null" >
        #{performanceId,jdbcType=INTEGER},
      </if>
      <if test="performance != null" >
        #{performance,jdbcType=DOUBLE},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="userAnswer != null" >
        #{userAnswer,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hniu.entity.PerformanceExample" resultType="java.lang.Integer" >
    select count(*) from tbl_performance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tbl_performance
    <set >
      <if test="record.performanceId != null" >
        performance_id = #{record.performanceId,jdbcType=INTEGER},
      </if>
      <if test="record.performance != null" >
        performance = #{record.performance,jdbcType=DOUBLE},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.taskId != null" >
        task_id = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.userAnswer != null" >
        user_answer = #{record.userAnswer,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tbl_performance
    set performance_id = #{record.performanceId,jdbcType=INTEGER},
      performance = #{record.performance,jdbcType=DOUBLE},
      user_id = #{record.userId,jdbcType=INTEGER},
      task_id = #{record.taskId,jdbcType=INTEGER},
      user_answer = #{record.userAnswer,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hniu.entity.Performance" >
    update tbl_performance
    <set >
      <if test="performance != null" >
        performance = #{performance,jdbcType=DOUBLE},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null" >
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="userAnswer != null" >
        user_answer = #{userAnswer,jdbcType=INTEGER},
      </if>
    </set>
    where performance_id = #{performanceId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hniu.entity.Performance" >
    update tbl_performance
    set performance = #{performance,jdbcType=DOUBLE},
      user_id = #{userId,jdbcType=INTEGER},
      task_id = #{taskId,jdbcType=INTEGER},
      user_answer = #{userAnswer,jdbcType=INTEGER}
    where performance_id = #{performanceId,jdbcType=INTEGER}
  </update>

  <resultMap id="performanceAll" type="com.hniu.entity.vo.PerformanceVo" extends="BaseResultMap">
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="stems" property="stems" jdbcType="VARCHAR" />
    <result column="option_A" property="optionA" jdbcType="VARCHAR" />
    <result column="option_B" property="optionB" jdbcType="VARCHAR" />
    <result column="option_C" property="optionC" jdbcType="VARCHAR" />
    <result column="option_D" property="optionD" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="knowledge_id" property="knowledgeId" jdbcType="INTEGER" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="user_Name" property="userName" jdbcType="VARCHAR" />
    <result column="wechat" property="wechat" jdbcType="VARCHAR" />
  </resultMap>
  <select id="PerformanceAll" resultMap="performanceAll">
    select a.*,b.*,c.user_Name,c.wechat
    FROM tbl_performance a LEFT JOIN tbl_task b
    ON a.task_id = b.task_id
    LEFT JOIN tbl_user c
    ON a.user_id = c.user_id
  </select>
  <select id="count" resultType="java.lang.Integer">
    SELECT count(performance_id)
    FROM tbl_performance
  </select>
  <select id="selectPerformance" parameterType="java.lang.Integer" resultMap="performanceAll">
    select a.*,b.*,c.user_Name,c.wechat
    FROM tbl_performance a LEFT JOIN tbl_task b
    ON a.task_id = b.task_id
    LEFT JOIN tbl_user c
    ON a.user_id = c.user_id
    WHERE a.performance_id = #{performanceId,jdbcType=INTEGER}
  </select>
  <select id="userId" parameterType="java.lang.Integer" resultMap="performanceAll">
    select a.*,b.*,c.user_Name,c.wechat
    FROM tbl_performance a LEFT JOIN tbl_task b
    ON a.task_id = b.task_id
    LEFT JOIN tbl_user c
    ON a.user_id = c.user_id
    WHERE a.user_id = #{user_id,jdbcType=INTEGER} GROUP BY a.performance_id desc
  </select>
  <select id="userIdAndKnowledgeId"  resultMap="performanceAll">
    select a.*,b.*,c.user_Name,c.wechat
    FROM tbl_performance a LEFT JOIN tbl_task b
    ON a.task_id = b.task_id
    LEFT JOIN tbl_user c
    ON a.user_id = c.user_id
    WHERE a.task_id IN (
						SELECT task_id
						FROM tbl_task
					    WHERE tbl_task.knowledge_id = #{knowledge_id}) AND a.user_id = #{user_id}
  </select>


</mapper>