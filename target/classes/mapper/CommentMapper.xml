<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hniu.mapper.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.hniu.entity.Comment" >
    <id column="comment_id" property="commentId" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
    <result column="curriculum_id" property="curriculumId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="asterisk_num" property="asteriskNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    comment_id, content, ctime, curriculum_id, user_id, asterisk_num
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hniu.entity.CommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tbl_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tbl_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hniu.entity.CommentExample" >
    delete from tbl_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hniu.entity.Comment" >
    insert into tbl_comment (comment_id, content, ctime, 
      curriculum_id, user_id, asterisk_num
      )
    values (#{commentId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{ctime,jdbcType=TIMESTAMP}, 
      #{curriculumId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{asteriskNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hniu.entity.Comment" >
    insert into tbl_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="curriculumId != null" >
        curriculum_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="asteriskNum != null" >
        asterisk_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="curriculumId != null" >
        #{curriculumId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="asteriskNum != null" >
        #{asteriskNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hniu.entity.CommentExample" resultType="java.lang.Integer" >
    select count(*) from tbl_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tbl_comment
    <set >
      <if test="record.commentId != null" >
        comment_id = #{record.commentId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.curriculumId != null" >
        curriculum_id = #{record.curriculumId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.asteriskNum != null" >
        asterisk_num = #{record.asteriskNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tbl_comment
    set comment_id = #{record.commentId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      curriculum_id = #{record.curriculumId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      asterisk_num = #{record.asteriskNum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hniu.entity.Comment" >
    update tbl_comment
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="curriculumId != null" >
        curriculum_id = #{curriculumId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="asteriskNum != null" >
        asterisk_num = #{asteriskNum,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hniu.entity.Comment" >
    update tbl_comment
    set content = #{content,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      curriculum_id = #{curriculumId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      asterisk_num = #{asteriskNum,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>


  <!-- 列出课程名称，评价内容，评价时间，及评价标星 -->
  <select id="getCommentInformation" parameterType="java.lang.Integer" resultType="com.hniu.entity.Comment_Extends">
     SELECT  a.content,a.ctime,a.asterisk_num,
        b.`name`
		FROM tbl_comment AS a
		inner JOIN tbl_curriculum AS b ON a.curriculum_id=b.curriculum_id WHERE b.curriculum_id=#{id}
	    order by b.curriculum_id
  </select>

  <!--2.显示课程总的评价数和课程得分-->
  <select id="getEvaluateNum" parameterType="java.lang.Integer" resultType="com.hniu.entity.Curriclum_Extends">
        SELECT COUNT(b.curriculum_id)  commentNum,a.score
        FROM tbl_curriculum a LEFT JOIN tbl_comment b ON a.curriculum_id = b.curriculum_id WHERE a.curriculum_id=#{id}
  </select>

</mapper>